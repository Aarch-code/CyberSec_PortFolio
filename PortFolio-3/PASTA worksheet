I. Define business and security objectives	
●	Users can create member profiles internally or by connecting external accounts.
●	The app must process financial transactions.
●	The app should be in compliance with PCI-DSS.

II. Define the technical scope
●	Application programming interface (API)
●	Public key infrastructure (PKI)
●	Advanced encryption system (AES)
●	SHA-256
●	SQL

APIs facilitate the exchange of data between customers, partners, and employees, so they should be prioritized. They handle a lot of sensitive data while they connect various users and systems together. However, details such as which APIs are being used should be considered before prioritizing one technology over another. So, they can be more prone to security vulnerabilities because there’s a larger attack surface.

III. Decompose application	- [[https://github.com/Aarch-code/CyberSec_PortFolio/blob/main/PortFolio-3/Data%20flow%20diagram.PNG]]

IV. Threat analysis	
●	Injection
●	Session hijacking

V. Vulnerability analysis	
●	Lack of prepared statements
●	Broken API token

VI. Attack modeling	- [[https://github.com/Aarch-code/CyberSec_PortFolio/blob/main/PortFolio-3/PASTA%20attack%20tree.PNG]]

VII. Risk analysis and impact	
SHA-256, incident response procedures, password policy, principle of least privilege
